========
OVERVIEW
========

OFELIA Control Framework (OCF) is a set of software tools for testbed
management. It controls experimentation life-cycle; reservation,
instantiation, configuration, monitoring and uninistantiation.

Features:

Full software stack: frontend, clearinghouse and resources managers
(AMs) Support for mangement of Openflow, Virtual Machines (currently XEN)
and Emulab resources.
OCF is currently deployed in OFELIA FP7 project testbed, the European
Openflow testbed. The ideas behind its architecture are heavily influenced
by the experience of other testbed management tools and GENI architectural
concepts. Take a look at Overview section for more details.


==============
INSTALLING OCF
==============

1. Requirements
---------------

* One (or more) GNU/Linux Debian-based distros
* One (or more) GNU/Linux Debian-based distros to be virtualized by XEN
(Virtualization Manager installations only)
* The following packages:
  * Python 2.6
  * Django 1.2.3
  * MySQL server

Note: for non Debian-based distros you shall install components manually
since the installation scripts for the OCF upgrading system (a.k.a. OFVER) 
[http://code.google.com/p/ofver/] supports Debian-based distros only.


2. Installation for Expedient, Optin and VM Manager
---------------------------------------------------

2.1 Install MySQL server

    apt-get install mysql-server

2.2 For each component (e.g. expedient) create its own database.
    Use strong passwords.

    mysql -p
    mysql> CREATE DATABASE expedient;
    Query OK, 1 row affected (0.00 sec)
    mysql> GRANT ALL ON expedient.* TO userName@127.0.0.1 IDENTIFIED BY 'password';
    Query OK, 0 rows affected (0.00 sec)

2.3 If not done already, clone the OCF repository under folder /opt:

    cd /opt
    git clone https://github.com/fp7-ofelia/ocf.git ofelia

    Alternatively you can download the tarball and uncompress it to /opt

2.4 Trigger OFVER installation by performing the following as a root user for
    each component:

    cd /opt/ofelia/{COMPONENT_NAME}/bin
    ./ofver install

    Where {COMPONENT_NAME} is either: expedient, optin_manager or vt_manager
    The following actions will take place:

    * Install dependencies
    * Build Certificates (see Note #1)
    * Configure Apache
    * Set file permissions
    * Modify the localsettings.py or mySettings.py depending on the 
      component being installed
    * Populate database
    * When installation starts, ofver will ask if it is an OFELIA
      project installation or not. Select No (N) for non OFELIA testbeds.

    Note #1: When installing the component, you will need to create the
    certificates for the Certification Authority (CA) first and for the
    component later. Do not use the same Common Name (CN) for both of them,
    and make sure that the CN you use in the component later certificate
    (you can use an IP) is the same you then set in the SITE_DOMAIN field
    in the localsettings.py file.


3. Upgrade instructions
-----------------------

The upgrade procedure is to be run by a root user and is very much the 
same for each component.

For all the common components {expedient, optin_manager, vt_manager}:

    cd /opt/ofelia/{COMPONENT_NAME}/bin
    ./ofver upgrade

or for the OXAD (XEN agent for virtualization purposes):

    cd /opt/ofelia/oxa/repository/vt_manager/src/python/agent/tools
    ./ofver upgrade


4. Additional notes
-------------------

Please have a look to Manuals [https://github.com/fp7-ofelia/ocf/wiki/Manuals]
for further component configuration.

You can use -f force flag on OFVER to force installation/upgrade. Take a look
at ./ofver -h for more details.


===============
FURTHER READING
===============

For more information about configuration, troubleshooting, contribution and
so on please visit https://github.com/fp7-ofelia/ocf/wiki
