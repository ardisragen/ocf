###########################################
#             INSTALLATION                #
###########################################

1. Ensure you have network connectivity:
----------------------------------------
$ ping google.com

If ping fails, click on the computer icon on the bottom left, click Network.
You may be asked for the root password (or use your password if you did not
setup a separate root password).
The window that shows up should show some interfaces that might need to be
configured.

Click on the unconfigured interface, make sure it is setup to use DHCP, then
click OK. Try ping again. You should see something like:

$ ping google.com
PING google.com (74.125.19.99) 56(84) bytes of data.
64 bytes from nuq04s01-in-f99.1e100.net (74.125.19.99): icmp_seq=1 ttl=128 time=21.0 ms
64 bytes from nuq04s01-in-f99.1e100.net (74.125.19.99): icmp_seq=2 ttl=128 time=3.08 ms

If this doesn't work then you have some other problem or further diagnosis is
needed.

2. Install make:
----------------
The following steps use 'sudo'. If asked for a password enter the root
password or your password if you have not setup a separate password.

When prompted on whether or not to install, approve the installation for the
next step:
$ sudo zypper install make

3. Extract the latest release:
------------------------------
$ tar -zxf expedient-x.y.z.tar.gz
$ cd expedient-x.y.z.tar.gz

4. Update the install settings:
-------------------------------
The default setup uses the command 'hostname -f' to find the hostname, which
might be inaccurate. Please set the hostname by opening install_settings. For
example, you can use gedit:

$ gedit install_settings

Then editing the line

	FQDN=`hostname -f`
to
	FQDN=<your hostname>

Save and return to the command prompt.

5. Install:
-----------
Please see below for what to respond on prompts:
$ sudo make install

When prompted with the following:

	Do you want to reject the key, trust temporarily, or trust always? [r/t/a/?] (r):

Type 'a' then hit enter. This should happen three times on a clean install.

If you see an error (expected) similar to:

	Problem: nothing provides libxmlsec1-openssl = 1.2.12 needed by libxmlsec1-openssl-devel-1.2.12-1.1.i586
	 Solution 1: do not install libxmlsec1-openssl-devel-1.2.12-1.1.i586
	 Solution 2: break libxmlsec1-openssl-devel by ignoring some of its dependencies
	
	Choose from above solutions by number or cancel [1/2/c] (c): 

Type '2' and then hit enter.

When prompted on whether or not to install packages:

	
	x new packages to install.
	Overall download size: xxx MiB. After the operation, additional xxx MiB will be used.
	Continue? [y/n/?] (y): 
	
Type 'y' then hit enter. 

When prompted with the following:

	You just installed Django's auth system, which means you don't have any superusers defined.
	Would you like to create one now? (yes/no):

Type 'yes' and hit enter. Then enter an administrator username/email and
password. This will be needed twice. Once for Expedient and once for the OM.

We have run into issues where the package download freezes. If this happens
type CTRL-C twice and restart. You can also change the repositories used to
mirrors, in particular for the OSS and non-OSS repos.

6. Update the runtime settings:
-------------------------------
(To install emacs: sudo zypper install emacs)

Note that OpenSuSE won't let you run X programs using sudo because the
developers consider it a security risk. You need to become root by:

$ su -

and then you would be able to run X programs.

As root, open
/srv/www/expedient/src/python/expedient/clearinghouse/deployment_settings.py
for editing.

a) Set the ADMINS tuple: Replace <your name> and <your email> with the name and
   email of your admin.
   
b) Set the SECRET_KEY to a new secret key. You can generate a new key by:
     
     # cd /srv/www/expedient/src/python
     # python expedient/clearinghouse/manage.py generate_secret_key
     
   A new key will be printed out. Copy that into the deployment_settings.py
   replacing the existing key.
   
c) Edit EMAIL_* to be similar to the configuration of your mail server.
   Expedient sends registration and other emails, and so it requires the
   ability to send email.

d) Edit MY_CA. Default works in OpenSuSE, but for advanced, see below.
   
   Edit the MY_CA variable to be the location of the CA certificate for the
   server.
   
e) Edit SITE_NAME to be the name of the site. Default works usually. This is
   used in some locations to identify the website (like in emails). To change,
   edit the SITE_NAME, then do the following:
   
     # cd /srv/www/expedient/src/python
     # python expedient/clearinghouse/manage.py syncdb
     
f) If you set the FQDN variable in the install_settings file during
   installation correctly, then the SITE_DOMAIN should be set to that same
   variable with the addition of the port number.
   
   In case of error, set the SITE_DOMAIN and follow the same instruction to
   update the database as in changing the SITE_NAME above.

g) OPENFLOW_GAPI_RSC_URN_PREFIX and OPENFLOW_GAPI_AM_URN specify the URNs used
   for the OpenFlow GENI API. You can replace "stanford" with the deployment
   name (e.g. "bbn").
   
You will then need to do the same for the optin manager settings (though there
is a smaller number of applicable settings there). These settings are in:

/srv/www/expedient/src/python/openflow/optin_manager/deployment_settings.py

So edit that file similarly as they use the same variables for the same
purposes. Note that if you need to update the DB (for example after changing
the SITE_DOMAIN) the relevant manage.py file is at 
openflow/optin_manager/manage.py instead of expedient/clearinghouse/manage.py

7. Restart Apache and test web access:
--------------------------------------
$ sudo /etc/init.d/apache2 restart

Open a web browser and go to https://localhost and https://localhost:8443
and make sure you can log in using the administrator information provided
during installation. You will need to confirm the security exceptions.

7. Install and setup a Flowvisor:
---------------------------------
Make sure you delete the 'mySSLKeyStore' file to generate a new certificate.

To install git: sudo zypper install git
To install ant and Sun's Java: sudo zypper install ant java-1_6_0-sun-devel
To remove openjdk: sudo zypper rm java-1_6_0-openjdk java-1_6_0-openjdk-plugin 

After installing java, you will need to set the JAVA_HOME environment variable:
  
  export JAVA_HOME=/usr/lib/jvm/java-1.6.0-sun
  
After that, follow the Flowvisor instructions to build and run with the
following exception: When the tool config-gen-default.sh tool asks for your
first and last name, use the IP address of the flowvisor instead of YOUR name.
This is **IMPORTANT**. This configuration will be used for testing. The tests
use the IP address as the hostname, which must match the CN in the certificate.
Other settings for the certificate are not necessary. When deploying somewhere
else, make sure the hostname you use to connect the OM to the FlowVisor
matches the name you use here when creating the certificate for the FlowVisor.

Test running the flowvisor, then kill it.

Note that we need a local flowvisor setup this way for testing, but the
flowvisor can run anywhere for deployment.

###########################################
#                TESTING                  #
###########################################

Note that running the tests is a destructive process that will flush the
databases. Make sure you don't run them on a deployment system. You will need
to run the syncdb command on the optin manager and the Expedient databases
afterwards (see step 13).

8. Run mininet:
---------------
Install the mininet VM somewhere the machine running Expedient can ssh to,
preferably on the same machine. Here are the instructions for installing on
the same machine:

The latest information is at:
http://www.openflowswitch.org/foswiki/bin/view/OpenFlow/MininetVMSetupNotes.

1-  Install vmware player
2-  Download the latest vm tarball indicated on the page above, and unpack it.
3-  Run vmwareplayer and open the VM.
4-  Log in to the VM (usrname: mininet, passwd: mininet). Check the eth0's IP
    address -> a.b.x.y
5-  Back in the host, ifconfig vmnet8 as a.b.x.1 if not already configured
6-  From host ping a.b.x.y (After this, you can ssh into the VM)
7-  VM: get latest openvswitch from http://openvswitch.org/releases/ and unpack.
8-  VM: in the openvswitch-x.y.z directory:
    a- ./configure --with-l26=/lib/modules/`uname -r`/build
    b- make
    c- sudo make install
9-  Host: run flowvisor.
10- VM: Test mininet with flowvisor:
    a- sudo mn --controller=remote --ip=a.b.x.1 --switch ovsk --port=6633
    b- You should see flowvisor connect to a switch.
    c- If you get an error: "TypeError: int argument required" it means you
       are using a buggy version of mininet. A fix has been pushed into git:
       i-   VM: cd; mv mininet mininet.bak
       ii-  VM: git clone git://yuba.stanford.edu/mininet.git
       iii- VM: cd mininet
       iv-  VM: git checkout -b tutorial origin/tutorial
       v-   VM: sudo make install
       vi-  Go back to 10-a.
11- VM: exit the mininet shell
12- Host: kill flowvisor

If mininet is running on a separate machine you will need to open port 6633 on
the flowvisor machine. The easiest way is to just shutdown the firewall:

	$ sudo /etc/init.d/SuSEfirewall2_setup stop
	
Otherwise you will need to edit the /etc/sysconfig/SuSEfirewall2 file, add
6633 to the FW_CONFIGURATIONS_EXT settings then do:

	$ sudo /etc/init.d/SuSEfirewall2_setup restart

9. Update the test settings:
----------------------------
Edit /srv/www/expedient/src/python/openflow/tests/test_settings.py as root 
and correct the following settings:

1- FLOWVISOR_DIR (set to the path of the local testing flowvisor)

2- The root password for the flowvisor you just configured (replacing
   "rootpassword")
  
3- The flowvisor "host" (change it to an IP address the mininet VM can use to
   talk to processes on the host)
  
4- If mininet is installed, edit MININET_VMS (replace "a.b.x.y" with
   the mininet VM's IP address)

10. Run the GAPI tests:
-----------------------
These tests exercise the GAPI interface.

$ su -
# cd /srv/www/expedient/src/python
# python openflow/tests/gapi/gapi.py

The tests should run with some output similar to:
  
	2010-06-24 02:13:24,394:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:107:setup started
	/usr/local/lib/python2.6/site-packages/django_registration-0.7-py2.6.egg/registration/models.py:4: DeprecationWarning: the sha module is deprecated; use the hashlib module instead
	  import sha
	No fixtures found.
	2010-06-24 02:13:34,342:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:171:setup done
	.2010-06-24 02:13:40,505:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:107:setup started
	No fixtures found.
	2010-06-24 02:13:48,894:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:171:setup done
	.2010-06-24 02:13:53,436:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:107:setup started
	No fixtures found.
	2010-06-24 02:14:02,254:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:171:setup done
	.2010-06-24 02:14:03,414:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:107:setup started
	No fixtures found.
	2010-06-24 02:14:11,899:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:171:setup done
	.2010-06-24 02:14:13,431:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:107:setup started
	No fixtures found.
	2010-06-24 02:14:21,506:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:171:setup done
	.2010-06-24 02:14:23,045:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:107:setup started
	No fixtures found.
	2010-06-24 02:14:30,294:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:171:setup done
	.2010-06-24 02:14:31,913:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:107:setup started
	No fixtures found.
	2010-06-24 02:14:39,245:gapi_test:DEBUG:openflow/tests/gapi/gapi.py:171:setup done
	.
	----------------------------------------------------------------------
	Ran 7 tests in 78.568s
	
	OK

Otherwise there have been some errors. Check the previous steps and report bugs
back to us please.

11. Run the Opt-in Manager tests:
---------------------------------
These tests exercise the optin manager's tests.

$ su -
# cd /srv/www/expedient/src/python
# python openflow/tests/om/om.py

The tests should run with some output similar to:
  
	/usr/local/lib/python2.6/site-packages/django_registration-0.7-py2.6.egg/registration/models.py:4: DeprecationWarning: the sha module is deprecated; use the hashlib module instead
	  import sha
	No fixtures found.
	.No fixtures found.
	.No fixtures found.
	.No fixtures found.
	.No fixtures found.
	.No fixtures found.
	.No fixtures found.
	.No fixtures found.
	.
	----------------------------------------------------------------------
	Ran 8 tests in 32.851s
	
	OK

Otherwise there have been some errors. Check the previous steps and report bugs
back to us please.

12. Run the integration tests:
------------------------------
These tests check that the Flowvisor, the OM, and the CH can talk to each
other. For these tests, make sure there is no other copy of the flowvisor
already running.

Make sure the firewall is down or setup for correctly (See step 8).

$ su -
# cd /srv/www/expedient/src/python
# python openflow/tests/full/fulltests.py 

You should see windows open and close, and an output similar to the following:

/usr/lib/python2.6/site-packages/Crypto/Hash/SHA.py:6: DeprecationWarning: the sha module is deprecated; use the hashlib module instead
  from sha import *
/usr/lib/python2.6/site-packages/Crypto/Hash/MD5.py:6: DeprecationWarning: the md5 module is deprecated; use hashlib instead
  from md5 import *
2010-06-24 04:59:50,672:__main__:DEBUG:openflow/tests/full/fulltests.py:115:Getting flowspace from flowvisor
2010-06-24 04:59:50,787:__main__:DEBUG:openflow/tests/full/fulltests.py:118:Deleting all flowspace
2010-06-24 04:59:56,675:__main__:DEBUG:openflow/tests/full/fulltests.py:57:Communicating with nox client run on port 6633
2010-06-24 04:59:56,675:__main__:DEBUG:openflow/tests/full/fulltests.py:59:Client out:

2010-06-24 04:59:58,996:__main__:DEBUG:openflow/tests/full/fulltests.py:57:Communicating with nox client run on port 6634
2010-06-24 04:59:58,996:__main__:DEBUG:openflow/tests/full/fulltests.py:59:Client out:

2010-06-24 05:00:01,424:__main__:DEBUG:openflow/tests/full/fulltests.py:83:Communicating with mininet client
2010-06-24 05:00:01,425:__main__:DEBUG:openflow/tests/full/fulltests.py:85:Client out:
*** Adding controller
*** Creating network
*** Adding hosts:
h3 h4 
*** Adding switches:
s1 s2 
*** Adding links:
(s1, s2) (s1, h3) (s2, h4) 
*** Configuring hosts
h3 h4 
*** Starting controller
*** Starting 2 switches
s1 s2 
*** Starting CLI:

No fixtures found.
2010-06-24 05:00:06,004:__main__:DEBUG:openflow/tests/full/fulltests.py:178:Running prepare_ch script.
2010-06-24 05:00:18,466:__main__:DEBUG:openflow/tests/full/fulltests.py:424:['SliceNameBla ID: urn:publicid:IDN+openflow:stanford+ch+slice+5dd3967e-aa35-4b4f-ae9c-02746f2f4a8e:127_0_0_1%3A8000', 'root']
2010-06-24 05:00:18,537:__main__:DEBUG:openflow/tests/full/fulltests.py:440:Slice info is {'creator': 'root', 'contact_email': 'john.doe@geni.net', 'controller_port': '6633', 'controller_hostname': '172.16.77.130'}
2010-06-24 05:00:19,469:__main__:DEBUG:openflow/tests/full/fulltests.py:338:nox stdout 
2010-06-24 05:00:19,470:__main__:DEBUG:openflow/tests/full/fulltests.py:338:nox stdout 
2010-06-24 05:00:19,470:__main__:DEBUG:openflow/tests/full/fulltests.py:342:mn stdout 
.2010-06-24 05:00:31,817:__main__:DEBUG:openflow/tests/full/fulltests.py:115:Getting flowspace from flowvisor
2010-06-24 05:00:31,946:__main__:DEBUG:openflow/tests/full/fulltests.py:118:Deleting all flowspace
2010-06-24 05:00:37,768:__main__:DEBUG:openflow/tests/full/fulltests.py:57:Communicating with nox client run on port 6633
2010-06-24 05:00:37,768:__main__:DEBUG:openflow/tests/full/fulltests.py:59:Client out:

2010-06-24 05:00:40,063:__main__:DEBUG:openflow/tests/full/fulltests.py:57:Communicating with nox client run on port 6634
2010-06-24 05:00:40,063:__main__:DEBUG:openflow/tests/full/fulltests.py:59:Client out:

2010-06-24 05:00:42,529:__main__:DEBUG:openflow/tests/full/fulltests.py:83:Communicating with mininet client
2010-06-24 05:00:42,529:__main__:DEBUG:openflow/tests/full/fulltests.py:85:Client out:
*** Adding controller
*** Creating network
*** Adding hosts:
h3 h4 
*** Adding switches:
s1 s2 
*** Adding links:
(s1, s2) (s1, h3) (s2, h4) 
*** Configuring hosts
h3 h4 
*** Starting controller
*** Starting 2 switches
s1 s2 
*** Starting CLI:

No fixtures found.
2010-06-24 05:00:47,801:__main__:DEBUG:openflow/tests/full/fulltests.py:178:Running prepare_ch script.
2010-06-24 05:01:00,447:__main__:DEBUG:openflow/tests/full/fulltests.py:424:['root', 'SliceNameBla ID: urn:publicid:IDN+openflow:stanford+ch+slice+6e012e83-34b0-48c2-8139-54497e30e3fb:127_0_0_1%3A8000']
2010-06-24 05:01:00,516:__main__:DEBUG:openflow/tests/full/fulltests.py:440:Slice info is {'creator': 'root', 'contact_email': 'john.doe@geni.net', 'controller_port': '6633', 'controller_hostname': '172.16.77.130'}
2010-06-24 05:01:00,517:__main__:DEBUG:openflow/tests/full/fulltests.py:338:nox stdout 
2010-06-24 05:01:00,517:__main__:DEBUG:openflow/tests/full/fulltests.py:338:nox stdout 
2010-06-24 05:01:00,518:__main__:DEBUG:openflow/tests/full/fulltests.py:342:mn stdout 
.2010-06-24 05:01:12,943:__main__:DEBUG:openflow/tests/full/fulltests.py:115:Getting flowspace from flowvisor
2010-06-24 05:01:13,139:__main__:DEBUG:openflow/tests/full/fulltests.py:118:Deleting all flowspace
2010-06-24 05:01:19,134:__main__:DEBUG:openflow/tests/full/fulltests.py:57:Communicating with nox client run on port 6633
2010-06-24 05:01:19,135:__main__:DEBUG:openflow/tests/full/fulltests.py:59:Client out:

2010-06-24 05:01:21,450:__main__:DEBUG:openflow/tests/full/fulltests.py:57:Communicating with nox client run on port 6634
2010-06-24 05:01:21,451:__main__:DEBUG:openflow/tests/full/fulltests.py:59:Client out:

2010-06-24 05:01:23,849:__main__:DEBUG:openflow/tests/full/fulltests.py:83:Communicating with mininet client
2010-06-24 05:01:23,850:__main__:DEBUG:openflow/tests/full/fulltests.py:85:Client out:
*** Adding controller
*** Creating network
*** Adding hosts:
h3 h4 
*** Adding switches:
s1 s2 
*** Adding links:
(s1, s2) (s1, h3) (s2, h4) 
*** Configuring hosts
h3 h4 
*** Starting controller
*** Starting 2 switches
s1 s2 
*** Starting CLI:

No fixtures found.
2010-06-24 05:01:28,280:__main__:DEBUG:openflow/tests/full/fulltests.py:178:Running prepare_ch script.
2010-06-24 05:01:37,912:__main__:DEBUG:openflow/tests/full/fulltests.py:378:FV devices: ['00:00:00:23:20:c5:0a:e8', '00:00:00:23:20:dd:01:1e']
2010-06-24 05:01:38,490:__main__:DEBUG:openflow/tests/full/fulltests.py:385:<rspec><network location="America" name="Test OpenFlowAggregate"><switches><switch urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:c5:0a:e8" /><switch urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:dd:01:1e" /></switches><links><link dst_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:c5:0a:e8+port:1" src_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:dd:01:1e+port:0" /><link dst_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:dd:01:1e+port:1" src_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:c5:0a:e8+port:0" /></links></network></rspec>
2010-06-24 05:01:38,491:__main__:DEBUG:openflow/tests/full/fulltests.py:338:nox stdout 
2010-06-24 05:01:38,492:__main__:DEBUG:openflow/tests/full/fulltests.py:338:nox stdout 
2010-06-24 05:01:38,492:__main__:DEBUG:openflow/tests/full/fulltests.py:342:mn stdout 
.
----------------------------------------------------------------------
Ran 3 tests in 120.322s

OK


13. Flush the databases:
------------------------
$ su -
# cd /srv/www/expedient/src/python
# python expedient/clearinghouse/manage.py flush
# python openflow/optin_manager/manage.py flush

You also need to make sure that there are no extraneous certificates.

# cd /srv/www/expedient/ssl.crt

Now rm any file or link other than the Makefile.

###########################################
#              DEPLOYMENT                 #
###########################################

14. Run the Flowvisor somewhere reachable by the machine:
---------------------------------------------------------
Note the SSL certificate requirements in step 7. You can run the same test
Flowvisor.

15. Run a Mininet VM and connect to the Flowvisor:
--------------------------------------------------

In the mininet VM:

$ sudo mn --topo=linear,4 --controller=remote --ip=<flowvisor_IP> --switch=ovsk

You should see switches connecting to the Flowvisor in the Flowvisor's
terminal.

16. Setup the Opt-In Manager:
-----------------------------

a) Go to Opt-in manager (OM) website (https://hostname:8443) and log in using
   the superuser credentials you made during install process.

b) Click on "Set Flowvisor" link (under "Manage Website" subtitle)

c) Fill the form:
	* Name: a name for this flowvisor
	* URL: URL of this flowvisor (should have a format like 
	  "http://flowvisor.com:8080/xmlrpc")
	* Username: your flowvisor account username (usually "root")
	* Password: your flowvisor account password
	* Max Password age: e.g. enter 60 days
	* Verify certs: uncheck.

then submit the form.

d) Now on the home page, click on "Set Clearinghouse" (under
   "Manage Website").

e) Set a username and password that will be used by Expedient to connect
   to the Opt-In manager. Then submit the form. This is the username and
   password that you will enter in Expedient when you add this openflow
   aggregate. This username must be unique.

17. Setup Expedient:
--------------------

a) Log in to the Expedient site (https://hostname) and log in using the
   superuser credentials created the install process.

b) Click on the drop menu and select "OpenFlow Aggregate" then click
   "Add Aggregate".
   
c) Fill the form then submit:
   * Name: a name to identify the OpenFlow aggregate at Expedient.
   * Logo: Unused.
   * Description: A description that will be used to describe the aggregate.
   * Geographic Location
   * Available: Keep checked. Indicates that the aggregate is enabled.
   * Usage Agreement: An agreement users of the aggregate using the Expedient
     Web interface will be required to accept.
   * Managers: Other users who can manage the Aggregate. This is currently not
     enforced.
   * Username/Password: The username and password set in step 16.c.
   * Max Password Age: After which Expedient will automatically change the
     password. Eventually we will probably change this system.
   * Server URL: The location of the Opt-In manager:
     "https://hostname:8443/xmlrpc/xmlrpc/". Make sure you use the
     fully-qualified domain name, not "localhost" or an IP address unless these
     are what the SSL certificate returns as Common Name.
   * verify certs: Unchecked.
   
d) Run the GENI API Proxy and a GENI Clearinghouse:

$ export PYTHONPATH=/srv/www/expedient/src/python
$ mkdir ssl
$ python /srv/www/expedient/src/python/gcf/init-ca.py -d ssl --am --ch --ca --exp
$ python /srv/www/expedient/src/python/gcf/gam.py -u https://localhost:443//openflow/gapi/ -r ssl/ca.crt -c ssl/server.crt -k ssl/server.key -p 8000 --debug

In another terminal (same working directory):
$ export PYTHONPATH=/srv/www/expedient/src/python
$ python /srv/www/expedient/src/python/gcf/gch.py -r ssl/ca.crt -c ssl/ch.crt -k ssl/ch.key -p 8001 --debug

###########################################
#                 USAGE                   #
###########################################

18. Register a new user:
------------------------

This will require two roles: the user and the admin (using the super user
credentials from installation).

a) If logged into the OM, log out.

b) Come back to the login page.

c) Create a new user by clicking on "Register" link and then filling out the 
   form. 

d) You will receive an e-mail. Open the e-mail to activate the account.

e) Log in using the normal user credentials.

19. Request Flowspace:
----------------------
a) First you need to request flowspace. click on the "Register Flowspace"
   link.

b) Enter the IP address of your machine, leave mac address as "*". then 
   submit the form.

At this point, a request has been sent to the admin who needs to approve it.
	 
c) Log out of OM.

d) Log in again using superuser credentials.

e) Click on "Approve User Requests" link under "Manage Requests"

f) You will see two requests. Approve both by clicking on "Approve" button.

g) Log out of OM.

20. Create an Experiment:
-------------------------
In a terminal, cd to the directory that has the "ssl/" directory created in
step 17.d. Note that the exact switch ids will differ in your setup.

$ export PYTHONPATH=/srv/www/expedient/src/python
$ python
Python 2.6.2 (r262:71600, Oct 24 2009, 03:16:31) 
[GCC 4.4.1 [gcc-4_4-branch revision 150839]] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import gcf.sfa.trust.credential as cred
>>> import xmlrpclib
>>> from expedient.common.utils.certtransport import SafeTransportWithCert
>>> cert_transport = SafeTransportWithCert(keyfile="ssl/experimenter.key", certfile="ssl/experimenter.crt")
>>> am_client = xmlrpclib.ServerProxy("https://localhost:8000/", cert_transport)
>>> am_client.GetVersion()
{'geni_api': 1}
>>> cert_transport = SafeTransportWithCert(keyfile="ssl/experimenter.key", certfile="ssl/experimenter.crt")
>>> ch_client = xmlrpclib.ServerProxy("https://localhost:8001/", cert_transport)
>>> slice_cred_string = ch_client.CreateSlice()
>>> slice_credential = cred.Credential(string=slice_cred_string)
>>> slice_gid = slice_credential.get_gid_object()
>>> slice_urn = slice_gid.get_urn()
>>> credentials = [slice_cred_string]
>>> options = dict(geni_compressed=False, geni_available=True)
>>> am_client.ListResources(credentials, options)
'<rspec><network location="asdf" name="asdf"><switches><switch urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:81:d3:dd" /><switch urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:ca:92:06" /><switch urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:b1:f4:c0" /><switch urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:d5:14:a4" /></switches><links><link dst_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:b1:f4:c0+port:1" src_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:ca:92:06+port:0" /><link dst_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:ca:92:06+port:1" src_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:d5:14:a4+port:0" /><link dst_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:d5:14:a4+port:1" src_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:81:d3:dd+port:0" /><link dst_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:81:d3:dd+port:1" src_urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:b1:f4:c0+port:0" /></links></network></rspec>'
>>> resv = '<resv_rspec><user firstname="John" lastname="Doe" email="john.doe@geni.net" password="slice_pass" /><project name="Stanford Networking Group" description="Internet performance research to ..."  /> <slice name="Crazy Load Balancer" description="Does this and that..." controller_url="tcp:controller.stanford.edu:6633" /> <flowspace><switches><switch urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:81:d3:dd" /></switches></flowspace></resv_rspec>'
>>> am_client.CreateSliver(slice_urn, credentials, resv)
'<resv_rspec><user firstname="John" lastname="Doe" email="john.doe@geni.net" password="slice_pass" /><project name="Stanford Networking Group" description="Internet performance research to ..."  /> <slice name="Crazy Load Balancer" description="Does this and that..." controller_url="tcp:controller.stanford.edu:6633" /> <flowspace><switches><switch urn="urn:publicid:IDN+openflow:stanford+switch:00:00:00:23:20:81:d3:dd" /></switches></flowspace></resv_rspec>'

21. Opt-in:
-----------

a) Log in using normal user credentials.

b) Click on "View Experiments" to see detailed information about created
   experiments.

c) Go back to the Dashboard (using the link on the left).

d) Click on "Opt In" link under "Manage Opt-In(s)" and choose the
   experiment to opt-in. Choose a priority (e.g. 100), then click on "Opt In"

We have run into a bug involving the interface between the Flowvisor and
the OM at this point, causing Opt-In to fail.

22. Opt-out:
------------
Click on "Opt Out". you will see a list of already opted flowspaces. Choose
the ones that you want to opt out of them, then click "Opt Out".


