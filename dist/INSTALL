The following directions apply for openSuSE 11.2:

Note the following conventions. A '#' at the beginning of a line means execute
as root, while a '$' means execute as normal user.

Install requirements to run our Django project:
-----------------------------------------------
# zypper addrepo -f http://download.opensuse.org/repositories/devel:/languages:/python/openSUSE_11.2 python
# zypper addrepo zypper addrepo -f http://download.opensuse.org/repositories/openSUSE:/11.2:/Contrib/standard/ contrib
# zypper install python-setuptools python-django python-decorator python-django-autoslug python-m2crypto python-imaging python-django-extensions python-dateutil libxmlsec1-1 libxmlsec1-openssl1 python-paramiko python-crypto python-django-renderform python-webob python-dateutil python-dev
# easy_install -Z django-registration python-xmlsec1 pyquery

The next thing might break, just ignore and force the install:
# zypper install libxmlsec1-openssl-devel

Edit Django Settings:
---------------------
edit the <egeni_root>/src/python/expedient/clearinghouse/settings.py and:
1. Set the database parameters (see the Django documentation).
2. Set the SITE_DOMAIN to your host's address
3. Set the SITE_NAME to what you would like to call your site
4. The ADMINS setting
5. The EMAIL_* settings
6. The XMLRPC_* settings and MY_CA according to your installation
8. The OPENFLOW_GAPI_* settings

Test Django Application:
------------------------
$ export PYTHONPATH=$PYTHONPATH:<egeni_root>/src/python
$ cd <egeni_root>/src/python
$ python expedient/clearinghouse/manage.py runserver

Point your browser to localhost:8000 to make sure Django works. Kill the server.

Setup Apache2:
--------------
# zypper addrepo -f http://download.opensuse.org/repositories/Apache:/Modules/openSUSE_11.2/ Apache:Modules
# zypper install apache2 apache2-mod_wsgi apache2-mod_macro apache2-itk
# ln -s <egeni_root>/src/config/expedient/clearinghouse/apache/vhost-macros.conf /etc/apache2/conf.d/

Edit the <egeni_root>/src/config/expedient/clearinghouse/apache/vhost-clearinghouse.conf and point
it to the correct <egeni_root> and set the correct port to listen to.

# ln -s <egeni_root>/src/config/expedient/clearinghouse/apache/vhost-clearinghouse.conf /etc/apache2/vhosts.d/
# mkdir /var/log/apache2/clearinghouse
# chmod o-w /var/log/apache2/clearinghouse
# a2enmod wsgi
# a2enmod ssl
# a2enmod macro
# a2enflag SSL
# /usr/bin/gensslcert

After the steps below, please ensure that apache can reach the the directories
below for reading/writing since it is running as user wwwrun and group www:
# chgrp -R www <egeni_root>/src/
# chgrp -R www <egeni_root>/db/
# chmod -R g+r <egeni_root>/src/
# chmod -R g+rw <egeni_root>/db/

Restart apache:
# /etc/init.d/apache2 restart

Point your browser to https://localhost/ to make sure SSL works.

Installing Mininet for testing:
-------------------------------
The latest information is at:
http://www.openflowswitch.org/foswiki/bin/view/OpenFlow/MininetVMSetupNotes.

Summary:
1-  Install vmware player
2-  Download the latest vm tarball indicated on the page above, and unpack it.
3-  Run vmwareplayer and open the VM.
4-  Log in to the VM (usrname: mininet, passwd: mininet). Check the eth0's IP
    address -> 192.168.x.y
5-  Back in the host, ifconfig vmnet8 as 192.168.x.1
6-  From host ping 192.168.x.y (After this, you can ssh into the VM)
7-  Host: run flowvisor
8-  VM: get latest openvswitch from http://openvswitch.org/releases/ and unpack.
9-  VM: in the openvswitch-x.y.z directory:
    a- ./configure --with-l26=/lib/modules/`uname -r`/build
    b- make
    c- sudo make install
10- VM: Test mininet with flowvisor:
    a- sudo mn --controller=remote --ip=192.168.x.1 --switch ovsk
    b- You should see flowvisor connect to a switch.
11- VM: exit the mininet shell
12- Host: kill flowvisor.

Using a different port:
-----------------------
To change the port to use:
1- add "Listen <port_num>" in <egeni_root>/src/config/expedient/clearinghouse/apache/vhost-clearinghouse.conf
2- change 443 to <port_name> in "Use SimpleSSLWSGIVHost 443..."

Add Certificates for Trusted GENI sites:
----------------------------------------
IMPORTANT: Note the .crt extension for the cert file
# cp <geni-ca-cert> /etc/apache2/ssl.crt/<geni-ca>.crt
# make -C /etc/apache2/ssl.crt
# /etc/init.d/apache2 restart

This is currently not needed to get GAPI working.

Setting up the GENI test harness:
---------------------------------
DEPRECATED: The information in the section is outdated and not applicable.

# zypper install python-dateutil
- Unpack the latest harness and link its src directory to 'gcf' as a sibling of
  'clearinghouse'. If there's no __init__.py, add it as an empty file.
- Follow the instructions in the harness README.txt to setup the test harness
  GPO, but don't run the tests yet.
- Follow the instructions above to add the GENI CA to the apache trusted CA dir 
- Add the 'clearinghouse.gapi_tester' to INSTALLED_APPLICATIONS
- Create a temporary directory for SFA <sfa-tmp>
- Run the server with the environment variable TMPDIR set to <sfa-tmp>
- Since nothing is persistent with the geni tests, you will need to reuse the
  same Python Django process for each request. To do that, open 
  vhost-macros.conf and replace the following line:

    Use WSGISetup $app_name $prefix $app_path $extra_dir_macro MultiWSGIDaemonProcess

  with this:
  
    Use WSGISetup $app_name $prefix $app_path $extra_dir_macro SingleWSGIDaemonProcess

- Restart apache
